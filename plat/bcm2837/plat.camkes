/* Copyright (C) 2020, HENSOLDT Cyber GmbH */

import <std_connector.camkes>;

import <if_OS_Timer.camkes>;

#include "RPI_SPI_SD/RPI_SPI_SD.camkes"
DECLARE_COMPONENT_RPI_SPI_MSD_DRV(RPI_SPI_SD)

#include "RPI_SD/RPI_SD.camkes"
DECLARE_COMPONENT_SYSTIMER_HW(SYSTIMER)
DECLARE_COMPONENT_MAILBOX_HW(MAILBOX)
DECLARE_COMPONENT_SDHOST_HW(SDHOST)
DECLARE_COMPONENT_EMMC_HW(EMMC)
DECLARE_COMPONENT_RPI_SD_DRV(RPI_SD)

#include "TimeServer/camkes/TimeServer.camkes"
DECLARE_COMPONENT_TimeServer(TimeServer)

assembly {
    composition {
        //----------------------------------------------------------------------
        // RPI SPI SD 
        //----------------------------------------------------------------------
        DECLARE_AND_CONNECT_INSTANCE_RPI_SPI_MSD(RPI_SPI_SD, spi_sd)

        component   StorageInterfaceTester tester_spi_sd;

        DECLARE_AND_CONNECT_INSTANCE_StorageServer(
            StorageServer, storageServer_rpi_spi_sd,
            spi_sd.storage_rpc, spi_sd.storage_port,
            tester_spi_sd.storage_rpc, tester_spi_sd.storage_port)

        //----------------------------------------------------------------------
        // integrated RPI SD
        //----------------------------------------------------------------------
        DECLARE_AND_CONNECT_INSTANCE_SD_DRV_HW(
            MAILBOX, mailbox, 
            SDHOST, sdhost, 
            EMMC, emmc,
            SYSTIMER, systimer,
            RPI_SD, sd
        )

        component   StorageInterfaceTester tester_sd;

        DECLARE_AND_CONNECT_INSTANCE_StorageServer(
            StorageServer, storageServer_rpi_sd,
            sd.storage_rpc, sd.storage_port,
            tester_sd.storage_rpc, tester_sd.storage_port)
 
        //----------------------------------------------------------------------
        // TimeServer
        //----------------------------------------------------------------------
        DECLARE_AND_CONNECT_INSTANCE_TimeServer(
            TimeServer,
            timeServer,
            spi_sd.timeServer_rpc,spi_sd.timeServer_notify,
            sd.timeServer_rpc,sd.timeServer_notify
        )
    }

    configuration {
        //----------------------------------------------------------------------
        // SPI SD storage server configuration
        //----------------------------------------------------------------------
        CONFIGURE_INSTANCE_StorageServer(
            storageServer_rpi_spi_sd,
            SPI_SD_STORAGE_OFFSET, SPI_SD_STORAGE_SIZE)
 
        ASSIGN_CLIENT_BADGE_StorageServer(
            tester_spi_sd, storage_rpc, 1)
        
        //----------------------------------------------------------------------
        // integrated SD storage server configuration 
        //----------------------------------------------------------------------
        CONFIGURE_INSTANCE_StorageServer(
            storageServer_rpi_sd,
            SD_STORAGE_OFFSET, SD_STORAGE_SIZE)
 
        ASSIGN_CLIENT_BADGE_StorageServer(
            tester_sd, storage_rpc, 1)

        //----------------------------------------------------------------------
        // SPI SD configuration
        //----------------------------------------------------------------------
        CONFIGURE_INSTANCE_RPI_SPI_MSD(spi_sd)

        //----------------------------------------------------------------------
        // integrated SD configuration 
        //----------------------------------------------------------------------
        CONFIGURE_INSTANCE_SYSTIMER_HW(systimer, 0x3F003000, 0x1000)
        
        CONFIGURE_INSTANCE_MAILBOX_HW(mailbox, 0x3F00B000, 0x1000)
        
        CONFIGURE_INSTANCE_SDHOST_HW(sdhost, 0x3F202000, 0x1000, 66)
        
        CONFIGURE_INSTANCE_EMMC_HW(emmc, 0x3F300000, 0x1000, 94)
        
        CONFIGURE_INSTANCE_SD_DRV(sd, 4*40960)

        //----------------------------------------------------------------------
        // tester priorities
        //----------------------------------------------------------------------
        tester_spi_sd._priority     = 110;
        tester_sd._priority         = 100; 
    }
}
