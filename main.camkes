/* Copyright (C) 2020, HENSOLDT Cyber GmbH */

import <std_connector.camkes>;

import "components/StorageInterfaceTester/StorageInterfaceTester.camkes";

#include "system_config.h"


#include "UART/Uart.camkes"
DECLARE_COMPONENT_UART(UART)

#include "ChanMux/ChanMux.camkes"
ChanMux_DEFINE_COMPONENT(ChanMux,
        chanMuxStorage, chan)

#include "ChanMux_Storage/ChanMux_Storage.camkes"

#include "RamDisk/RamDisk.camkes"
DECLARE_COMPONENT_RamDisk(RamDisk)

assembly {
    composition {

        // UART
        DECLARE_AND_CONNECT_INSTANCE_UART(
            UART, uartDrv)

        // ChanMux
        ChanMux_DECLARE_AND_CONNECT_INSTANCE_TO_UART(ChanMux, chanMux, uartDrv)

        // ChanMux_Storage
        component   ChanMux_Storage chanMuxStorage;

        ChanMux_INSTANCE_CONNECT_INTERFACE(chanMux, chanMuxStorage)
        ChanMux_INSTANCE_CONNECT_CHANNEL(chanMux, chanMuxStorage, chan)

        // RamDisk
        component   RamDisk             ramDisk;

        // ChanMux_Storage_tester
        component   StorageInterfaceTester tester;

        connection  seL4RPCCall         tester_chanMux_storage     (from tester.chanMuxStorage_rpc,  to chanMuxStorage.storage_rpc);
        connection  seL4SharedData      tester_chanMux_storage_port(from tester.chanMuxStorage_port, to chanMuxStorage.storage_port);

        connection  seL4RPCCall         tester_ramDisk             (from tester.ramDisk_rpc,         to ramDisk.storage_rpc);
        connection  seL4SharedData      tester_ramDisk_port        (from tester.ramDisk_port,        to ramDisk.storage_port);
    }

    configuration {
        CONFIGURE_INSTANCE_UART(
            uartDrv,
            CFG_CHANMUX_DEFAULT_UART_PHYS_ADDR,
            CFG_CHANMUX_DEFAULT_UART_INTR)

        // assign endpoint badges for n:1 RPC interface of ChanMUX. The generic
        // naming scheme is <component>.<interface>_attributes = <badge ID>
        ChanMux_ASSIGN_CLIENT_BADGE(chanMux, chanMuxStorage, CHANMUX_ID)
        ramDisk.storage_size_bytes = 2048;
    }
}
